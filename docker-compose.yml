version: "3.7"
services:
  dbserver:
    container_name: mysql-db  # コンテナ名（Docker Desktop上はこの名前で表示される）
    build:
      context: ./docker/mysql # Dockerfileを含むディレクトリへのパス
      dockerfile: Dockerfile  # Dockerfile名
    image: mysql:latest # イメージ名
    environment:
      MYSQL_ROOT_PASSWORD: root # 環境変数（rootユーザのパスワード）
      MYSQL_USER: test      # 環境変数（ユーザ）
      MYSQL_PASSWORD: test  # 環境変数（パスワード）
      MYSQL_DATABASE: testdb     # 環境変数（データベース名）
    restart: always # 再起動ポリシー
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_unicode_ci  # mysql_native_password を使用したネイティブ認証
    ports:
      - "3306:3306" # ポートマッピング
    volumes:
      - ./docker/mysql/conf.d:/etc/mysql/conf.d # mysql.confディレクトリのマッピング
      - ./docker/log/mysql:/var/log/mysql       # mysqld.logディレクトリのマッピング
      - ./docker/mysql/init:/docker-entrypoint-initdb.d # 初期データ投入
      - mysql_db:/var/lib/mysql                 # データ永続化ボリュームのマッピング
  spring:
    container_name: spring-app  # コンテナ名（Docker Desktop上はこの名前で表示される）
    build: ./docker/spring      # Dockerfileを含むディレクトリへのパス
    depends_on:
      - dbserver  # MySQLコンテナが起動した後に起動させる
    ports:
      - "8080:8080"             # ポートマッピング
    volumes:
      - .:/app                  # ボリュームマッピング
    environment:
      # MySQLの接続設定
      spring.datasource.driverClassName: "com.mysql.cj.jdbc.Driver"
      spring.datasource.url: "jdbc:mysql://dbserver/testdb"  # host:port部分はコンテナ名を指定する
      spring.datasource.username: "test"
      spring.datasource.password: "test"
    working_dir: /app # 作業ディレクトリ
    # jarから起動
    command: sh -c "java -jar ./build/libs/cocomecha_api-0.0.1-SNAPSHOT.jar"
# # DBの永続化先
volumes:
  mysql_db:
    driver: local
